#!/usr/bin/env bash
# chezmoi:template:left-delimiter="# [[" right-delimiter=]]

# Exit on error. Append || true if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
#set -o xtrace

export PATH=# [[ includeTemplate "path" | trim | quote ]]

# [[- $brews := .all_os.brews ]]
# TODO need to verify that neo4j no longer needs admin access on a mac
# [[ $casks := list -]]
# [[ $taps := .all_os.taps -]]
# [[ $mases := dict -]]

# [[- if .full -]]
# [[-   $brews = concat $brews .all_os.full_brews -]]
# [[- end -]]

# [[- if eq .chezmoi.os "darwin" -]]
# [[-   $casks = concat $casks .mac_os.casks -]]
# [[-   $brews = concat $brews .mac_os.brews -]]
# [[-   $taps = concat $taps .mac_os.taps -]]

# [[-   if .full -]]
# [[-     $casks = concat $casks .mac_os.full_casks -]]
# [[-     if .admin -]]
# [[-       $casks = concat $casks .mac_os_admin.full_casks -]]
# [[-       $brews = concat $brews .mac_os_admin.full_brews -]]
# [[-     end -]]
# [[-   end -]]
# [[- end -]]

brew bundle --no-lock --file=/dev/stdin <<EOF
# [[ range ($taps | sortAlpha | uniq) -]]
tap "# [[ . ]]"
# [[ end -]]

# [[ range ($brews | sortAlpha | uniq) -]]
brew "# [[ . ]]"
# [[ end -]]

cask_args appdir: '~/Applications'
# [[ range ($casks | sortAlpha | uniq) -]]
cask "# [[ . ]]"
# [[ end -]]

# [[ range $k, $v := $mases -]]
mas "# [[ $v ]]", id: # [[ $k ]]
# [[ end -]]
EOF
