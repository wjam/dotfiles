#!/usr/bin/env bash

# List all resources, sub-resources & verbs supported by a Kubernetes cluster

# Exit on error. Append || true if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
#set -o xtrace

# do core resources first, which are at a separate api location
kubectl get --raw /api/v1 | jq -r '.resources[] | "core \(.name): \(.verbs | join(" "))"'

while IFS= read -r api; do
  while IFS= read -r version; do
    apis=$(kubectl get --raw "/apis/$api/$version" 2>&1 || true)
    if [ "$apis" != "Error from server (NotFound): the server could not find the requested resource" ]; then
      echo "$apis" | jq -r --arg api "$api" --arg version "$version" '.resources[] | "\($api) \($version) \(.name): \(.verbs | join(" "))"'
    fi
  done < <(kubectl get --raw "/apis/$api"  | jq -cr '.versions[].version')
done < <(kubectl get --raw /apis | jq -cr '.groups[].name' | sort)
