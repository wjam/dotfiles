require "string"

local bluetoothWasOffWhenSleeping = false

function trim(s)
  return string.match(s, "^%s*(.-)%s*$")
end

function checkBluetoothResult(rc, stdout, stderr)
    if rc ~= 0 then
        print(string.format("Unexpected result executing `blueutil`: rc=%d stderr=%s stdout=%s", rc, stderr, stdout))
    end
end

function checkIfBluetoothAlreadyOff(rc, stdout, stderr)
    if rc ~= 0 then
        print(string.format("Unexpected result executing `blueutil`: rc=%d stderr=%s stdout=%s", rc, stderr, stdout))
    elseif trim(stdout) == "0" then
        bluetoothWasOffWhenSleeping = true
    else
        toggleBluetooth()
    end
end

function toggleBluetooth()
    print("Toggling bluetooth")
    local t = hs.task.new("{{ joinPath .chezmoi.homeDir ".local" "bin" "toggle-bluetooth" }}", checkBluetoothResult)
    t:start()
end

function handlePowerEvent(event)
    if event == hs.caffeinate.watcher.systemDidWake then
      if bluetoothWasOffWhenSleeping then
        bluetoothWasOffWhenSleeping = false
        return
      end
      toggleBluetooth()
    elseif event == hs.caffeinate.watcher.systemWillSleep then
      print("Checking if Bluetooth is running")
      local t = hs.task.new("{{ .brew.prefix }}/bin/blueutil", checkIfBluetoothAlreadyOff, {"--power"})
      t:start()
      return
    end
end

watcher = hs.caffeinate.watcher.new(handlePowerEvent)
watcher:start()
